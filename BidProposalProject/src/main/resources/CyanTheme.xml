<synth ml-update="aware">
    <!-- A basic style, applies to all regions, as specified in the bind tag -->
    <style id="basicStyle">
        <opaque value="TRUE" />
        <font name="Monospaced" size="12" />

        <state> <!-- Normal state -->
            <!-- <color value="magenta" type="BACKGROUND" /> -->
            <!-- <color value="black" type="FOREGROUND" /> -->
        </state>
    </style>
    <bind style="basicStyle" type="region" key=".*" />
    <!--
    ====================================================================================================================================================== -->

    <!-- Style for labels -->
    <style id="labelStyle">
        <insets top="2" left="2" right="2" bottom="2" />
    </style>
    <bind style="labelStyle" type="region" key="Label" />
    <!--
    ====================================================================================================================================================== -->

    <!-- Style for buttons -->
    <style id="buttonStyle">
        <insets top="16" left="16" right="16" bottom="16" />
        <state> <!-- Normal state for button -->
            <color value="#afccd6" type="TEXT_FOREGROUND" />
            <imagePainter method="buttonBackground" path="images/Button.png" sourceInsets="8 8 8 8" />
        </state>
        <state value="FOCUSED"> <!-- Disabled state for button -->
            <color value="#afccd6" type="TEXT_FOREGROUND" />
            <imagePainter method="buttonBackground" path="images/Button_Focused.png"
                sourceInsets="8 8 8 8" />
        </state>
        <state value="MOUSE_OVER"> <!-- Hovered state for button -->
            <color value="#afccd6" type="TEXT_FOREGROUND" />
            <imagePainter method="buttonBackground" path="images/Button_Hovered.png"
                sourceInsets="8 8 8 8" />
        </state>
        <state value="MOUSE_OVER AND FOCUSED"> <!-- Selected Pressed state for buttons -->
            <color value="#afccd6" type="TEXT_FOREGROUND" />
            <imagePainter method="buttonBackground" path="images/Button_Hovered_Focused.png"
                sourceInsets="8 8 8 8" />
        </state>
        <state value="DISABLED"> <!-- Selected Pressed state for buttons -->
            <color value="#58696e" type="TEXT_FOREGROUND" />
            <imagePainter method="buttonBackground" path="images/Button_Disabled.png"
                sourceInsets="8 8 8 8" />
        </state>
    </style>
    <bind style="buttonStyle" type="region" key="Button" />
    <!--
    ====================================================================================================================================================== -->

    <!-- Style for text fields -->
    <style id="textFieldStyle">
        <insets top="4" left="4" right="4" bottom="4" />
        <font name="Monospaced" size="12" />
        <!-- For each state, have to provide multiple imagePainters, one for each text component -->
        <state> <!-- Normal state for text fields -->
            <imagePainter method="textFieldBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="textAreaBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="formattedTextFieldBackground"
                path="images/TextField_Unfocused.png" sourceInsets="8 8 8 8" />
            <imagePainter method="editorPaneBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="textPaneBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="passwordFieldBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <color value="#3d567b" type="TEXT_FOREGROUND" />
            <color value="#291b2d" type="TEXT_BACKGROUND" /> <!-- Highlight colour consistent across
			all states -->
        </state>
        <state value="DISABLED"> <!-- Disabled state for text fields -->
            <imagePainter method="textFieldBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="textAreaBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="formattedTextFieldBackground"
                path="images/TextField_Unfocused.png" sourceInsets="8 8 8 8" />
            <imagePainter method="editorPaneBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="textPaneBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="passwordFieldBackground" path="images/TextField_Unfocused.png"
                sourceInsets="8 8 8 8" />
            <color value="white" type="TEXT_FOREGROUND" />
        </state>
        <state value="FOCUSED"> <!-- Focused state for text fields -->
            <imagePainter method="textFieldBackground" path="images/TextField.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="textAreaBackground" path="images/TextField.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="formattedTextFieldBackground" path="images/TextField.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="editorPaneBackground" path="images/TextField.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="textPaneBackground" path="images/TextField.png"
                sourceInsets="8 8 8 8" />
            <imagePainter method="passwordFieldBackground" path="images/TextField.png"
                sourceInsets="8 8 8 8" />
            <color value="white" type="TEXT_FOREGROUND" />
        </state>
    </style>
    <bind style="textFieldStyle" type="region" key="TextField" />
    <bind style="textFieldStyle" type="region" key="TextArea" />
    <bind style="textFieldStyle" type="region" key="FormattedTextField" /> <!-- Is overridden in the
	case of the JSpinner's JFormattedTextField -->
    <bind style="textFieldStyle" type="region" key="EditorPane" />
    <bind style="textFieldStyle" type="region" key="TextPane" />
    <bind style="textFieldStyle" type="region" key="PasswordField" />
    <!--
    ====================================================================================================================================================== -->

    <!-- Style for check box / tick box as we say in this country -->
    <style id="checkBoxStyle">
        <insets top="0" left="0" right="0" bottom="0" />

        <imageIcon id="gn" path="images/Checkbox_GreyBox_NoCheck.png" />
        <imageIcon id="gw" path="images/Checkbox_GreyBox_WhiteCheck.png" />
        <imageIcon id="rn" path="images/Checkbox_RedBox_NoCheck.png" />
        <imageIcon id="rw" path="images/Checkbox_RedBox_WhiteCheck.png" />

        <state>
            <!-- <property key="CheckBox.icon" value="base" /> -->
            <property key="CheckBox.icon" value="gn" />
        </state>

        <state value="DISABLED">
            <!-- <property key="CheckBox.icon" value="base" /> -->
            <property key="CheckBox.icon" value="gn" />
        </state>

        <state value="DISABLED and SELECTED">
            <!-- <property key="CheckBox.icon" value="base" /> -->
            <property key="CheckBox.icon" value="gw" />
        </state>

        <state value="MOUSE_OVER">
            <!-- <property key="CheckBox.icon" value="m" /> -->
            <property key="CheckBox.icon" value="rn" />
        </state>

        <state value="PRESSED">
            <!-- <property key="CheckBox.icon" value="p" /> -->
            <property key="CheckBox.icon" value="gw" />
        </state>

        <state value="SELECTED">
            <!-- <property key="CheckBox.icon" value="s" /> -->
            <property key="CheckBox.icon" value="gw" />
        </state>

        <state value="MOUSE_OVER and SELECTED">
            <!-- <property key="CheckBox.icon" value="ms" /> -->
            <property key="CheckBox.icon" value="rw" />
        </state>

    </style>
    <bind style="checkBoxStyle" type="region" key="CheckBox" />
    <!--
    ====================================================================================================================================================== -->

    <!-- Style for the entire scrollbar -->
    <style id="scrollBarStyle">
        <insets top="2" left="2" right="2" bottom="2" />
        <state>
            <!-- Normal state styles for the ScrollBar region -->
            <color value="#291b2d" type="BACKGROUND" />
        </state>
        <state value="MOUSE_OVER">
            <!-- Hovered state styles for the ScrollBar region -->
            <color value="#3d567b" type="BACKGROUND" />
        </state>
        <state value="PRESSED">
            <!-- Pressed state styles for the ScrollBar region -->
            <color value="#888888" type="BACKGROUND" />
        </state>
        <state value="DISABLED">
            <!-- Disabled state styles for the ScrollBar region -->
            <color value="#DDDDDD" type="BACKGROUND" />
        </state>
    </style>
    <!--
    ==================================================================================================== -->

    <!-- Style for the thumb/slider -->
    <style id="thumbStyle">
        <state>
            <!-- Normal state styles for the ScrollBar.thumb region -->
            <imagePainter method="thumbBackground" path="Images/Button_Focused.png"
                sourceInsets="1 1 1 1" />
            <imagePainter method="scrollBarThumbBorder"
                path="Images/TextField_Unfocused.png"
                sourceInsets="1 1 1 1" />
        </state>
        <!-- Add other states and styles as needed -->
    </style>
    <!--
    ==================================================================================================== -->

    <!-- Style for the track -->
    <style id="trackStyle">
        <state>
            <!-- Normal state styles for the ScrollBar.track region -->
            <color value="black" type="BACKGROUND" />
        </state>
        <!-- Add other states and styles as needed -->
    </style>
    <!--
    ==================================================================================================== -->

    <!-- Style for the arrow buttons -->
    <style id="arrowButtonStyle">
        <state>
            <!-- Normal state styles for the ScrollBar.arrowButton region -->
            <imagePainter method="arrowButtonBackground" path="images/Button.png"
                sourceInsets="2 2 2 2" />
        </state>
        <!-- Add other states and styles as needed -->
    </style>
    <!--
    ==================================================================================================== -->

    <!-- Style for the increment button -->
    <style id="incrementButtonStyle">
        <state>
            <!-- Normal state styles for the ScrollBar.incrementButton region -->
            <imagePainter method="incrementButtonBackground"
                path="images/ScrollBar_Increment.png" sourceInsets="2 2 2 2" />
        </state>
        <!-- Add other states and styles as needed -->
    </style>
    <!--
    ==================================================================================================== -->

    <!-- Style for the decrement button -->
    <style id="decrementButtonStyle">
        <state>
            <!-- Normal state styles for the ScrollBar.decrementButton region -->
            <imagePainter method="decrementButtonBackground"
                path="images/Button.png" sourceInsets="2 2 2 2" />
        </state>
        <!-- Add other states and styles as needed -->
    </style>
    <!--
    ==================================================================================================== -->

    <!-- Bind the styles to the relevant components -->
    <bind style="scrollBarStyle" type="region" key="VerticalScrollBar" />
    <bind style="thumbStyle" type="region" key="VerticalScrollBar.thumb" />
    <bind style="trackStyle" type="region" key="VerticalScrollBar.track" />
    <bind style="arrowButtonStyle" type="region" key="ScrollBar.arrowButton" />
    <bind style="incrementButtonStyle" type="region" key="ScrollBar.incrementButton" />
    <bind style="decrementButtonStyle" type="region" key="ScrollBar.decrementButton" />
    <!--
    ====================================================================================================================================================== -->


    <!-- Style for combo boxes arrow buttons -->
    <style id="comboBoxBtnStyle">
        <opaque value="TRUE" />
        <!-- <insets top="0" left="0" right="0" bottom="0"/> -->
        <imagePainter method="arrowButtonForeground" path="images/arrows/combobox_arrow.png"
            direction="SOUTH" center="true" />
    </style>
    <!-- <bind style="comboBoxBtnStyle" type="name" key="ComboBox.arrowButton" /> -->

    <!-- Style for toggle buttons -->
    <style id="toggleButtonStyle">
        <insets top="5" left="10" right="10" bottom="5" />
        <state> <!-- Normal state for toggle button -->
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
            <imagePainter method="toggleButtonBackground" path="images/button.png"
                sourceInsets="8 8 8 8" />
        </state>
        <state value="DISABLED"> <!-- Disabled state for toggle button -->
            <color value="#6B717D" type="TEXT_FOREGROUND" />
            <imagePainter method="toggleButtonBackground" path="images/button_disabled.png"
                sourceInsets="8 8 8 8" />
        </state>
        <state value="MOUSE_OVER"> <!-- Hovered state for toggle button -->
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
            <imagePainter method="toggleButtonBackground" path="images/button_hovered.png"
                sourceInsets="8 8 8 8" />
        </state>
        <state value="PRESSED"> <!-- Pressed state for toggle buttons -->
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
            <imagePainter method="toggleButtonBackground" path="images/button_pressed_alt.png"
                sourceInsets="8 8 8 8" />
        </state>
        <state value="SELECTED"> <!-- Selected state for toggle buttons -->
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
            <imagePainter method="toggleButtonBackground" path="images/button_pressed_alt.png"
                sourceInsets="8 8 8 8" />
        </state>
    </style>
    <!-- <bind style="toggleButtonStyle" type="region" key="ToggleButton" /> -->

    <!-- Style for spinner editor -->
    <style id="spinnerEditorStyle">
        <insets top="5" left="10" right="10" bottom="5" />
        <state> <!-- Normal state for spinner editor -->
            <imagePainter method="formattedTextFieldBackground" path="images/spinnerEditor.png"
                sourceInsets="8 8 8 8" />
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
            <color value="#568AF2" type="TEXT_BACKGROUND" /> <!-- Highlight colour consistent across
            all states -->
        </state>
        <state value="DISABLED"> <!-- Disabled state for spinner editor -->
            <imagePainter method="formattedTextFieldBackground" path="images/spinnerEditor.png"
                sourceInsets="8 8 8 8" />
            <color value="#6B717D" type="TEXT_FOREGROUND" />
        </state>
        <state value="FOCUSED"> <!-- Focused state for spinner editor -->
            <imagePainter method="formattedTextFieldBackground"
                path="images/spinnerEditor_focused.png" sourceInsets="8 8 8 8" />
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
        </state>
    </style>
    <!-- <bind style="spinnerEditorStyle" type="name" key="Spinner.formattedTextField" /> <!-- Overrides -->
    the style defined for all formatted text fields -->

    <!-- Style for panels -->
    <!-- <style id="panelStyle"> 	// Puts a dark border around all JPanels, uncomment this if you
        want
		<state>
            <color value="#21252B" type="BACKGROUND"/>
			<imagePainter method="panelBorder" path="images/border.png" sourceInsets="8 8 8 8"/>
		</state>
	</style>
	<bind style="panelStyle" type="region" key="Panel"/> -->

    <!-- Style for menu bars -->
    <style id="menuBarStyle">
    </style>

    <!-- Style for menus -->
    <style id="menuStyle">
        <insets top="5" left="10" right="10" bottom="5" />
        <state>
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
        </state>
        <state value="DISABLED">
            <color value="#6B717D" type="TEXT_FOREGROUND" />
        </state>
        <state value="MOUSE_OVER">
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
            <color value="#568AF2" type="TEXT_BACKGROUND" />
        </state>
        <state value="SELECTED">
            <color value="#DBDBDB" type="TEXT_FOREGROUND" />
            <color value="#568AF2" type="TEXT_BACKGROUND" />
        </state>
    </style>
    <!-- <bind style="menuStyle" type="region" key="Menu" /> -->

    <!-- Style for arrow buttons -->
    <style id="arrowButton">
        <!-- <insets top="5" left="10" right="10" bottom="5"/> <! Doesn't seem to provide the
        required insets -->
        <property key="ArrowButton.size" type="integer" value="16" /> <!-- Determines width -->
        <!-- Draw the correct arrow button direction -->
        <imagePainter method="arrowButtonForeground" path="images/arrows/arrow_north.png"
            direction="NORTH" center="true" />
        <imagePainter method="arrowButtonForeground" path="images/arrows/arrow_east.png"
            direction="EAST" center="true" />
        <imagePainter method="arrowButtonForeground" path="images/arrows/arrow_south.png"
            direction="SOUTH" center="true" />
        <imagePainter method="arrowButtonForeground" path="images/arrows/arrow_west.png"
            direction="WEST" center="true" />
        <state> <!-- Normal state for button -->
            <imagePainter method="arrowButtonBackground" path="images/button.png"
                sourceInsets="2 2 2 2" />
        </state>
        <state value="DISABLED"> <!-- Disabled state for button -->
            <imagePainter method="arrowButtonBackground" path="images/button_disabled.png"
                sourceInsets="2 2 2 2" />
        </state>
        <state value="MOUSE_OVER"> <!-- Hovered state for button -->
            <imagePainter method="arrowButtonBackground" path="images/button_hovered.png"
                sourceInsets="2 2 2 2" />
        </state>
        <state value="PRESSED"> <!-- Pressed state for buttons -->
            <imagePainter method="arrowButtonBackground" path="images/button_pressed_alt.png"
                sourceInsets="2 2 2 2" />
        </state>
    </style>
    <!-- <bind style="arrowButton" type="region" key="ArrowButton" /> -->
</synth>